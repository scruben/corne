/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp GRAVE &kp Q &kp W &kp E &kp R &kp T         &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &lt 3 LC(LG(TAB)) &lt 1 A &kp S &kp D &kp F &kp G       &kp H &kp J  &kp K     &kp L   &lt 1 SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B         &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
     &mt LGUI BSPC &mt LCTRL RET &lt 2 ESC         &lt 3 DEL &lt 2 SPACE &mt RALT TAB 
                        >;
                };
                lower_layer {
                        bindings = <
   &kp ESC       &kp LS(HOME)     &kp K_PLAY_PAUSE  &kp K_NEXT   &kp LS(LBKT)  &kp LS(RBKT)        &kp LS(LEFT) &kp LS(DOWN) &kp LS(UP)  &kp LS(RIGHT)  &kp LS(END) &kp BSPC
   &kp CLCK      &kp HOME         &kp BSPC          &kp DEL      &kp LS(N9)    &kp LS(N0) 	   &kp LEFT     &kp UP       &kp UP      &kp RIGHT      &kp END     &kp RET
   &kp LSHFT     &trans           &trans            &trans       &kp LBKT      &kp RBKT            &kp N0      &kp N1     &kp N2  &kp N3  &trans   &kp RBKT
                          	                    &mt LGUI DEL &mt LCTRL SPACE &kp TAB           &kp BSPC    &kp RET    &mt RALT ESC
                        >;
                };
                raise_layer {
// -----------------------------------------------------------------------------------------
// | F1  | F2 |  F3 | F4  | F5  | F6  |     | [  |  ]  |  {  |  }  | PSCR| BKSP |
// | F7  | F8 |  F9 | F10 | F11 | F12 |     | ¿  |  ?  |  #  |  &  | UP  |  ç   |
// |BTCLR| BT1 | BT2| BT3 |BT4  | BT5 |     |  ¡ |  !  |  %  |  L  | DOWN|  R   |
//             | bootloader |  _  | @   |     | ENT|     | ALT |
                        bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6          &kp RA(LBKT)  &kp RA(RBKT)   &kp RA(SQT)  &kp RA(BSLH)  &kp PSCRN   &kp BSPC
   &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12         &kp PLUS      &kp LS(MINUS)  &kp GRAVE    &kp RA(N3)    &kp UP      &kp BSLH
   &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp EQUAL     &kp EXCL       &kp TILDE    &kp LEFT      &kp DOWN    &kp RIGHT
                                          &trans       &trans 	    &kp RA(N2)      &trans        &trans         &kp RALT
                        >;
                };
                raise_one_more_layer {
// -----------------------------------------------------------------------------------------
// | F1  | F2 |  F3 | F4  | F5  | F6  |     | [  |  ]  |  {  |  }  | PSCR| BKSP |
// | F7  | F8 |  F9 | F10 | F11 | F12 |     | ¿  |  ?  |  #  |  &  | UP  |  ç   |
// |BTCLR| BT1 | BT2| BT3 |BT4  | BT5 |     |  ¡ |  !  |  %  |  L  | DOWN|  R   |
//             | bootloader |  _  | @   |     | ENT|     | ALT |
                        bindings = <
   &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6          &kp RA(LBKT)  &kp RA(RBKT)   &kp RA(SQT)  &kp RA(BSLH)  &kp PSCRN   &kp BSPC
   &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12         &kp PLUS      &kp LS(MINUS)  &kp GRAVE    &kp RA(N3)    &kp UP      &kp BSLH
   &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp EQUAL     &kp EXCL       &kp TILDE    &kp LEFT      &kp DOWN    &kp RIGHT
                                          &trans       &trans 	    &kp RA(N2)      &trans        &trans         &kp RALT
                        >;
                };
        };
};
